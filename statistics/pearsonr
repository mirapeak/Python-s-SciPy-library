import numpy as np
from scipy.stats import pearsonr

# Define the heavy metal concentrations for each sample type (water, soil, vegetable)
water_concentrations = np.array([
    [0.055556, 0.363636, 0.076923, 0.1, 0.037037, 0.043478, 0.15],
    [0.027778, 0.818182, 0.076923, 0.1, 0.037037, 0.086957, 0.05],
    [0.027778, 0.363636, 0.076923, 0.1, 0.037037, 0.086957, 0.15]
])

soil_concentrations = np.array([
    [2.5, 32.72727, 2.307692, 6, 1.111111, 5.217391, 31.5],
    [0.833333, 24.54545, 4.615385, 9, 1.111111, 1.304348, 31.5],
    # Add more soil samples here
])

vegetable_concentrations = np.array([
    [2.777778, 9.090909, 3.846154, 15, 3.703704, 2.173913, 27.5],
    [1.388889, 18.18182, 3.846154, 5, 1.851852, 6.521739, 32.5],
    # Add more vegetable samples here
])

# Create lists of heavy metal names
metals = ['Zn', 'Cu', 'Ni', 'Cd', 'Cr', 'Pb', 'Mn']

# Perform correlation analysis for each sample type
for i, sample_type in enumerate(['Water', 'Soil', 'Vegetable']):
    concentrations = [water_concentrations, soil_concentrations, vegetable_concentrations][i]
    print(f"\nCorrelation Analysis for {sample_type} Samples:")
    
    # Calculate correlation matrix
    correlation_matrix = np.corrcoef(concentrations, rowvar=False)
    
    # Print correlation matrix
    print("Correlation Matrix:")
    print(correlation_matrix)
    
    # Print correlations with other heavy metals
    print("Correlation with Other Heavy Metals:")
    for j, metal in enumerate(metals):
        correlations = correlation_matrix[j, :]
        other_metals = [(metals[k], correlations[k]) for k in range(len(metals)) if k != j]
        print(f"{metal}: {other_metals}")

